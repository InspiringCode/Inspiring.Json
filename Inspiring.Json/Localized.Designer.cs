//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inspiring.Json {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Localized {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localized() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Inspiring.Json.Localized", typeof(Localized).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot get contract information for &apos;{0}&apos; because the &apos;DiscriminatorName&apos; is specified more than once (on itself, its base types or implemented interfaces)..
        /// </summary>
        internal static string CreateContract_DiscriminatorSpecifiedMultipleTimes {
            get {
                return ResourceManager.GetString("CreateContract_DiscriminatorSpecifiedMultipleTimes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot deserialize to an object of type &apos;{0}&apos;. The value &apos;{1}&apos; for type property &apos;{2}&apos; is not a valid type name..
        /// </summary>
        internal static string Deserialize_InvalidDiscriminatorValue {
            get {
                return ResourceManager.GetString("Deserialize_InvalidDiscriminatorValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot deserialize to an object of type &apos;{0}&apos;. For abstract types the type property &apos;{1}&apos; has to be set in the JSON..
        /// </summary>
        internal static string Deserialize_MissingDiscriminatorProperty {
            get {
                return ResourceManager.GetString("Deserialize_MissingDiscriminatorProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot get a type discrminator value for type &apos;{0}&apos; because it is not a contract type..
        /// </summary>
        internal static string GetDiscriminatorValue_InvalidContractType {
            get {
                return ResourceManager.GetString("GetDiscriminatorValue_InvalidContractType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot get a type discrminator value for type &apos;{0}&apos;. Add the [ContractAssembly] attribute to the assembly &apos;{1}&apos; to include its contract types..
        /// </summary>
        internal static string GetDiscriminatorValue_MissingContractAssemblyAttribute {
            get {
                return ResourceManager.GetString("GetDiscriminatorValue_MissingContractAssemblyAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot get a type discrminator value for type &apos;{0}&apos;. Add a [Contract] attribute to the type definition to mark it as a contract type..
        /// </summary>
        internal static string GetDiscriminatorValue_MissingContractAttribute {
            get {
                return ResourceManager.GetString("GetDiscriminatorValue_MissingContractAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; is not a contract type. Neither it nor any of its base types or implemented interfaces has the [Contract(DiscriminatorName = ...)] attribute applied to it..
        /// </summary>
        internal static string GetHierarchyInfo_NoContractType {
            get {
                return ResourceManager.GetString("GetHierarchyInfo_NoContractType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find a type for type discriminator value &apos;{0}&apos;. Make sure that &apos;{0}&apos; denotes a subtype of &apos;{1}&apos; and that the [Contract] attribute is applied to all subtypes of &apos;{1}&apos; and the [ContractAssembly] attribute to all assemblies containing contract types..
        /// </summary>
        internal static string ResolveType_NotFound {
            get {
                return ResourceManager.GetString("ResolveType_NotFound", resourceCulture);
            }
        }
    }
}
